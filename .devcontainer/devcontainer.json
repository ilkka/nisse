// For format details, see https://aka.ms/vscode-remote/devcontainer.json or this file's README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.128.0/containers/docker-existing-docker-compose
// If you want to run as a non-root user in the container, see .devcontainer/docker-compose.yml.
{
  "name": "Nisse dev env",
  // Update the 'dockerComposeFile' list if you have more compose files or use different names.
  // The .devcontainer/docker-compose.yml file contains any overrides you need/want to make.
  "dockerComposeFile": [
    "..\\docker-compose.yml",
    "..\\dev.docker-compose.yml",
    "docker-compose.yml"
  ],
  // The 'service' property is the name of the service for the container that VS Code should
  // use. Update this value and .devcontainer/docker-compose.yml to the real service name.
  "service": "backend",
  // The optional 'workspaceFolder' property is the path VS Code should open by default when
  // connected. This is typically a file mount in .devcontainer/docker-compose.yml
  "workspaceFolder": "/workspace",
  // Set *default* container specific settings.json values on container create.
  "settings": {
    "terminal.integrated.shell.linux": "/usr/bin/zsh"
  },
  // Add the IDs of extensions you want installed when the container is created.
  "extensions": [
    "benvp.vscode-hex-pm-intellisense",
    "dbaeumer.vscode-eslint",
    "esbenp.prettier-vscode",
    "github.vscode-pull-request-github",
    "iampeterbanjo.elixirlinter",
    "jakebecker.elixir-ls",
    "ms-azuretools.vscode-docker",
    "ms-ossdata.vscode-postgresql",
    "pgourlain.erlang",
    "oderwat.indent-rainbow",
    "jebbs.plantuml"
  ],
  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [
    4000
  ],
  // Uncomment the next line if you want start specific services in your Docker Compose config.
  // "runServices": [],
  // Uncomment the next line if you want to keep your containers running after VS Code shuts down.
  // "shutdownAction": "none",
  // Uncomment the next line to run commands after the container is created - for example installing curl.
  // "postCreateCommand": "apt-get update && apt-get install -y curl",
  // Uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
  //
  // This doesn't work due to the mounted files being owned by root:root (see https://code.visualstudio.com/docs/remote/containers-advanced#_adding-a-nonroot-user-to-your-dev-container),
  // any writes fail although they shouldn't. Maybe that's a symptom of using the WLS2 backend for Docker.
  // "remoteUser": "nisse"
  "remoteUser": "root"
}